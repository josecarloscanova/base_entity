<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="base">
                <property environment="env"/>
                <property name="ECLIPSE_HOME" value="../../../../Java/eclipse-standard-luna-R-win32-x86_64/eclipse/"/>
                <property name="junit.output.dir" value="junit"/>
                <property name="debuglevel" value="source,lines,vars"/>
                <property name="target" value="1.7"/>
                <property name="source" value="1.7"/>
            	<property name="datanucleus.ConnectionDriverName" value="org.postgresql.Driver"/>
            	<property name="musicbrainz.ConnectionURL" value="jdbc:postgresql://localhost/musicbrainz"/>
            	<property name="calendar.ConnectionURL" value="jdbc:postgresql://localhost/calendar"/>
            	<property name="atlas.ConnectionURL" value="jdbc:postgresql://localhost/atlas"/>
            	<property name="instruments.ConnectionURL" value="jdbc:postgresql://localhost/instruments"/>
            	<property name="datanucleus.ConnectionURL" value="${musicbrainz.ConnectionURL}"/>
            	<property name="datanucleus.ConnectionUserName" value="postgres"/>
            	<property name="datanucleus.ConnectionPassword" value="postgres123"/>
            	<property name="jpa.persistence.unit.musicbrainz" value="musicbrainz"/>
            	<property name="jpa.persistence.unit.calendar" value="calendar"/>
            	<property name="jpa.persistence.unit.atlas" value="atlas"/>
            	<property name="jpa.persistence.unit.instruments" value="instruments"/>
            	<property name="current.jpa.target" value="${jpa.persistence.unit.musicbrainz}"/>	
            	<property name="schema.output.file" value="${basedir}/${current.jpa.target}_schema.ddl"/>
            	              	
    <path id="Maven Dependencies.libraryclasspath">
        <pathelement location="../../.m2/repository/org/postgresql/postgresql/9.3-1101-jdbc4/postgresql-9.3-1101-jdbc4.jar"/>
        <pathelement location="../../.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar"/>
        <pathelement location="../../.m2/repository/jstl/jstl/1.2/jstl-1.2.jar"/>
        <pathelement location="../../.m2/repository/junit/junit/4.9/junit-4.9.jar"/>
        <pathelement location="../../.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar"/>
        <pathelement location="../../.m2/repository/org/mockito/mockito-all/1.9.0/mockito-all-1.9.0.jar"/>
        <pathelement location="../../.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar"/>
        <pathelement location="../../.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar"/>
        <pathelement location="../../.m2/repository/javax/activation/activation/1.1/activation-1.1.jar"/>
        <pathelement location="../../.m2/repository/javax/jdo/jdo-api/3.1-rc1/jdo-api-3.1-rc1.jar"/>
        <pathelement location="../../.m2/repository/javax/transaction/transaction-api/1.1/transaction-api-1.1.jar"/>
        <pathelement location="../../.m2/repository/org/eclipse/persistence/javax.persistence/2.1.0/javax.persistence-2.1.0.jar"/>
        <pathelement location="../../.m2/repository/org/datanucleus/datanucleus-core/3.2.13/datanucleus-core-3.2.13.jar"/>
        <pathelement location="../../.m2/repository/org/datanucleus/datanucleus-api-jpa/3.3.7/datanucleus-api-jpa-3.3.7.jar"/>
        <pathelement location="../../.m2/repository/org/datanucleus/datanucleus-jpa-query/3.0.3/datanucleus-jpa-query-3.0.3.jar"/>
        <pathelement location="../../.m2/repository/org/datanucleus/datanucleus-rdbms/3.2.12/datanucleus-rdbms-3.2.12.jar"/>
        <pathelement location="../../.m2/repository/org/datanucleus/datanucleus-maven-plugin/4.0.0-release/datanucleus-maven-plugin-4.0.0-release.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/plexus/plexus-utils/3.0.8/plexus-utils-3.0.8.jar"/>
        <pathelement location="../../.m2/repository/org/apache/maven/maven-artifact/3.0.4/maven-artifact-3.0.4.jar"/>
        <pathelement location="../../.m2/repository/org/apache/maven/maven-plugin-api/3.0.4/maven-plugin-api-3.0.4.jar"/>
        <pathelement location="../../.m2/repository/org/apache/maven/maven-model/3.0.4/maven-model-3.0.4.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/sisu-inject-plexus/2.3.0/sisu-inject-plexus-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/sisu-guava/0.9.9/sisu-guava-0.9.9.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-bean-containers/2.3.0/guice-bean-containers-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-bean-inject/2.3.0/guice-bean-inject-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-plexus-shim/2.3.0/guice-plexus-shim-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0.jar"/>
        <pathelement location="../../.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-bean-reflect/2.3.0/guice-bean-reflect-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-bean-locators/2.3.0/guice-bean-locators-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-bean-binders/2.3.0/guice-bean-binders-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar"/>
        <pathelement location="../../.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-bean-scanners/2.3.0/guice-bean-scanners-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-bean-converters/2.3.0/guice-bean-converters-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-plexus-metadata/2.3.0/guice-plexus-metadata-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-plexus-converters/2.3.0/guice-plexus-converters-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-plexus-locators/2.3.0/guice-plexus-locators-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-plexus-binders/2.3.0/guice-plexus-binders-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-plexus-scanners/2.3.0/guice-plexus-scanners-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/sonatype/sisu/inject/guice-plexus-lifecycles/2.3.0/guice-plexus-lifecycles-2.3.0.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.5/plexus-container-default-1.5.5.jar"/>
        <pathelement location="../../.m2/repository/org/codehaus/plexus/plexus-classworlds/2.2.2/plexus-classworlds-2.2.2.jar"/>
        <pathelement location="../../.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar"/>
        <pathelement location="../../.m2/repository/log4j/log4j/1.2.12/log4j-1.2.12.jar"/>
        <pathelement location="../../.m2/repository/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar"/>
        <pathelement location="../../.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar"/>
        <pathelement location="../../.m2/repository/org/datanucleus/javax.persistence/2.1.0/javax.persistence-2.1.0.jar"/>
        <pathelement location="../../.m2/repository/org/hibernate/hibernate-validator/5.1.2.Final/hibernate-validator-5.1.2.Final.jar"/>
        <pathelement location="../../.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar"/>
        <pathelement location="../../.m2/repository/org/jboss/logging/jboss-logging/3.1.3.GA/jboss-logging-3.1.3.GA.jar"/>
        <pathelement location="../../.m2/repository/com/fasterxml/classmate/1.0.0/classmate-1.0.0.jar"/>
    </path>
    <path id="base.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="build.classpath">
		<pathelement location="target/classes"/>
	</path>
	<path id="resources.classpath">
		<pathelement location="src/main/resources"/>
	</path>
    <!--<path id="run.AuthorDataNucleusMappedEntityTest.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DataNucleusMappedEntityRetrieveTest.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.DataNucleusMappedEntityTest (2).classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.EnhancerTest (3).classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.InstrumentBaseTest.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.PersistenceManagerFactoryTest (1).classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.TestMappedStringBase.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.WorkDataNucleusMappedEntityTest.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.ZipCoderDataNucleusMappedEntityTest.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.JPATestDAO.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <path id="run.JPATestDAO.start.classpath">
        <path refid="base.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>-->
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <include name="**/*.java"/>
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/main/resources"/>
            <include name="**/*.java"/>
            <classpath refid="base.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <classpath refid="base.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <!--<target name="AuthorDataNucleusMappedEntityTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.AuthorDataNucleusMappedEntityTest" todir="${junit.output.dir}"/>
            <classpath refid="run.AuthorDataNucleusMappedEntityTest.classpath"/>
        </junit>
    </target>
    <target name="DataNucleusMappedEntityRetrieveTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.DataNucleusMappedEntityRetrieveTest" todir="${junit.output.dir}"/>
            <classpath refid="run.DataNucleusMappedEntityRetrieveTest.classpath"/>
        </junit>
    </target>
    <target name="DataNucleusMappedEntityTest (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.DataNucleusMappedEntityTest" todir="${junit.output.dir}"/>
            <classpath refid="run.DataNucleusMappedEntityTest (2).classpath"/>
        </junit>
    </target>
    <target name="EnhancerTest (3)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.EnhancerTest" todir="${junit.output.dir}"/>
            <classpath refid="run.EnhancerTest (3).classpath"/>
        </junit>
    </target>
    <target name="InstrumentBaseTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.instruments.InstrumentBaseTest" todir="${junit.output.dir}"/>
            <classpath refid="run.InstrumentBaseTest.classpath"/>
        </junit>
    </target>
    <target name="PersistenceManagerFactoryTest (1)">
        <java classname="test.org.nanotek.datanucleus.PersistenceManagerFactoryTest" failonerror="true" fork="yes">
            <classpath refid="run.PersistenceManagerFactoryTest (1).classpath"/>
        </java>
    </target>
    <target name="TestMappedStringBase">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.TestMappedStringBase" todir="${junit.output.dir}"/>
            <classpath refid="run.TestMappedStringBase.classpath"/>
        </junit>
    </target>
    <target name="WorkDataNucleusMappedEntityTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.WorkDataNucleusMappedEntityTest" todir="${junit.output.dir}"/>
            <classpath refid="run.WorkDataNucleusMappedEntityTest.classpath"/>
        </junit>
    </target>
    <target name="ZipCoderDataNucleusMappedEntityTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.ZipCoderDataNucleusMappedEntityTest" todir="${junit.output.dir}"/>
            <classpath refid="run.ZipCoderDataNucleusMappedEntityTest.classpath"/>
        </junit>
    </target>
    <target name="JPATestDAO">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.dao.JPATestDAO" todir="${junit.output.dir}"/>
            <classpath refid="run.JPATestDAO.classpath"/>
        </junit>
    </target>
    <target name="JPATestDAO.start">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.org.nanotek.datanucleus.persistence.dao.JPATestDAO" todir="${junit.output.dir}"/>
            <classpath refid="run.JPATestDAO.start.classpath"/>
        </junit>
    </target>-->
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
              	
	<target name="enhance" depends="build">
          <echo message="==================================================================="/>
          <echo message="Enhancing the MODULE files"/>
          <echo message="==================================================================="/>
              	        <!-- the classpath to enhance -->
              	        <path id="enhancer.classpath">
              	        	<!--<pathelement location="${module.classes.dir}"/>-->
              	        	<path refid="resources.classpath"/>
              	            <path refid="base.classpath"/>
              	        </path>
              	        <!-- define the task enhancer -->
              	        <taskdef name="nucleusenhancer"
              	                 classpathref="base.classpath"
              	                 classname="org.datanucleus.enhancer.EnhancerTask" 
              	        />
              	        <!-- enhance -->
              	        <nucleusenhancer classpathref="enhancer.classpath" 
              	        		persistenceUnit="${current.jpa.target}" 
              	        	    verbose="true" api="JPA">
              	        </nucleusenhancer>
     </target>	
	
	<target name="schemainfo">
		<path id="schema.classpath">
		      <path refid="Maven Dependencies.libraryclasspath"/>
		</path>
		
		<taskdef name="schematool"  
			classpathref="schema.classpath"  
			classname="org.datanucleus.store.schema.SchemaToolTask" />

		    	<schematool failonerror="true" verbose="true" mode="schemainfo" api="jpa">
				    <classpath>
				        <path refid="schema.classpath"/>
				    </classpath>
				    <!--<fileset dir="${classes.dir}">
				        <include name="**/*.jdo"/>
				    </fileset>-->
				    <sysproperty key="datanucleus.ConnectionDriverName" 
				                 value="${datanucleus.ConnectionDriverName}"/>
				    <sysproperty key="datanucleus.ConnectionURL" 
				                 value="${datanucleus.ConnectionURL}"/>
				    <sysproperty key="datanucleus.ConnectionUserName" 
				                 value="${datanucleus.ConnectionUserName}"/>
				    <sysproperty key="datanucleus.ConnectionPassword" 
				                 value="${datanucleus.ConnectionPassword}"/>
				    <sysproperty key="datanucleus.Mapping" 
				                 value="${datanucleus.Mapping}"/>
				</schematool>
		</target> 

	
		<target name="schema_delete">
			  <path id="schema.classpath">
		      <path refid="Maven Dependencies.libraryclasspath"/>
		      <path refid="resources.classpath"/>
			  <path refid="base.classpath"/>
		</path>
		
		
		<taskdef name="schemainfo_delete"  
						classpathref="schema.classpath"  
						classname="org.datanucleus.store.schema.SchemaToolTask"  />

					    	<schemainfo_delete failonerror="true" verbose="true" mode="delete"  api="jpa"
					    		persistenceUnit="${current.jpa.target}">
							    <classpath>
							        <path refid="schema.classpath"/>
							    </classpath>
							    <!--<fileset dir="${classes.dir}">
							        <include name="**/*.jdo"/>
							    </fileset>-->
							    <sysproperty key="datanucleus.ConnectionDriverName" 
							                 value="${datanucleus.ConnectionDriverName}"/>
							    <sysproperty key="datanucleus.ConnectionURL" 
							                 value="${datanucleus.ConnectionURL}"/>
							    <sysproperty key="datanucleus.ConnectionUserName" 
							                 value="${datanucleus.ConnectionUserName}"/>
							    <sysproperty key="datanucleus.ConnectionPassword" 
							                 value="${datanucleus.ConnectionPassword}"/>
							    <sysproperty key="datanucleus.Mapping" 
							                 value="${datanucleus.Mapping}"/>
							</schemainfo_delete>
		</target>
	
		<target name="schema_generate_DDL" depends="enhance">
			<path id="schema.classpath">
			      <path refid="Maven Dependencies.libraryclasspath"/>
			      <path refid="resources.classpath"/>
				  <path refid="base.classpath"/>
			</path>
			
			<taskdef name="schematool"  
				classpathref="schema.classpath"  
				classname="org.datanucleus.store.schema.SchemaToolTask"  />

			    	<schematool failonerror="true" verbose="true" mode="create" api="jpa" ddlFile="${schema.output.file}"
			    		persistenceUnit="${jpa.persistence.unit.musicbrainz}" completeDdl="true">
					    <classpath>
					        <path refid="schema.classpath"/>
					    </classpath>
					    <!--<fileset dir="${classes.dir}">
					        <include name="**/*.jdo"/>
					    </fileset>-->
					    <sysproperty key="datanucleus.ConnectionDriverName" 
					                 value="${datanucleus.ConnectionDriverName}"/>
					    <sysproperty key="datanucleus.ConnectionURL" 
					                 value="${datanucleus.ConnectionURL}"/>
					    <sysproperty key="datanucleus.ConnectionUserName" 
					                 value="${datanucleus.ConnectionUserName}"/>
					    <sysproperty key="datanucleus.ConnectionPassword" 
					                 value="${datanucleus.ConnectionPassword}"/>
					    <sysproperty key="datanucleus.Mapping" 
					                 value="${datanucleus.Mapping}"/>
					</schematool>
			</target>     
</project>
